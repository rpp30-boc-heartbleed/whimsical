name: Continuous Integration

on:
  pull_request:
    branches: [ dev ]

jobs:
  test:
    name: Test with Jest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [ managed ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Packages
        run: npm install
      - name: Cd Into Client
        run: cd client
      - name: Install Client Packages
        run: expo install
      - name: Cd Into Root
        run: cd ..
      - name: Run CI environment
        run: npm ci
      - name: Test
        run: npx jest --ci
  deploy_preview:
    name: Deploy Preview
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: expo/expo-github-action@v5
        with:
          expo-packager: npm
          expo-token: ${{ secrets.EXPO_TOKEN }}
          expo-cache: true
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Packages
        run: npm install
      - name: Cd into /client
        run: cd client
      - name: Install Client Packages
        run: expo install
      - name: Expo Publish
        run: expo publish --non-interactive --release-channel pr${{ github.event.number }}
      - name: Add QR to PR
        uses: mshick/add-pr-comment@v1
        env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EXPO_PROJECT: "@heartbleed/quick-bagel"
        with:
          message: |
            ![Expo QR](https://api.qrserver.com/v1/create-qr-code/?size=250x250&data=exp://exp.host/${{ env.EXPO_PROJECT }}?release-channel=pr${{ github.event.number }})
            Published to https://exp.host/${{ env.EXPO_PROJECT }}?release-channel=pr${{ github.event.number }}
